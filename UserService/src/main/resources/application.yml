server:
  port: 8081
   
spring:
  data:
    mongodb:
      database: Microservice
      port: 27017
      host: localhost
  jpa:
    database-platform: 
    show-sql: true
    hibernate:
      ddl-auto: update
  application:
    name: USER-SERVICE
  config:
    import: configserver:http://localhost:8085
    
    
#Spring Security Client
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-69944771.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oagp5dci2UCra9xd5d7
            client-secret: n9eb7cayb9XyTAL0bb8Qpbyu0gELMIPumUJ64Aegnj4y9VUgRj1vCkvo3TXJfW4b
        provider:
          okta:
            issuer-uri: https://dev-69944771.okta.com/oauth2/default
       
            
    
management: 
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always         
      
#CircuitBreaker      
resilience4j: 
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true 
        eventConsumerBufferSize: 10
        minimumNumberOfCalls: 5
        automaticTransitionFromToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED 
        
        
#Retry
#  Retry:
#    instances:
#      ratingHotelService:        
#        maxAttempts: 3
#        waitDuration: 2s

        
#RateLimiter
#  rateLimiter:
#    instances:
#      ratingHotelRatingLimiter:
#        timeoutDuration: 0s
#        limitRefreshPeriod: 2
#        limitForPeriod: 4s
        
        
        
#Secuity Okta Configuration
okta:
  oauth2:
    issuer: https://dev-69944771.okta.com/oauth2/default
    audience: api://default
    
          
#eureka:
#  instance: 
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka